var = [
"mphcuiszrnjzxwkbgdzqeoyxfa",
"mihcuisgrnjzxwkbgdtqeoylia",
"mphauisvrnjgxwkbgdtqeiylfa",
"mphcuisnrnjzxwkbgdgqeoylua",
"mphcuisurnjzxwkbgdtqeoilfi",
"mkhcuisvrnjzowkbgdteeoylfa",
"mphcoicvrnjzxwksgdtqeoylfa",
"mxhcuisvrndzxwkbgdtqeeylfa",
"dphcuisijnjzxwkbgdtqeoylfa",
"mihvuisvrqjzxwkbgdtqeoylfa",
"mphcuisrrnvzxwkbgdtqeodlfa",
"mphtuisdrnjzxskbgdtqeoylfa",
"mphcutmvsnjzxwkbgdtqeoylfa",
"mphcunsvrnjzswkggdtqeoylfa",
"mphcuisvrwjzxwkbpdtqeoylfr",
"mphcujsdrnjzxwkbgdtqeovlfa",
"mpfcuisvrdjzxwkbgdtteoylfa",
"mppcuisvrpjzxwkbgdtqeoywfa",
"mphcuisvrnjzxwkbfptqroylfa",
"mphcuisvrnjzxwkbgstoeoysfa",
"mphcufsvrnjzcwkbgdeqeoylfa",
"mphcuissrnjzxwkbgdkquoylfa",
"sphcuxsvrnjzxwkbgdtqioylfa",
"mphcuiivrhjzxwkbgdtqevylfa",
"echcuisvrnjzxwkbgltqeoylfa",
"mphcuisvrljexwkbvdtqeoylfa",
"mpjcuisvrnjzxwkhidtqeoylfa",
"mphcuisvrfjzmwkbgdtqeoylfl",
"mwhcuisvrnjzxwkbgdtqeoytfm",
"mphcuisvrsjzxwkbgdaqeoylfh",
"mohcuisvrnjzxwkbgdtqtoymfa",
"maycuisvrnjzxwkbgdtqboylfa",
"pphcuisvqnjzxwkbgdtqeoylfd",
"mprcuisvrnjtxwmbgdtqeoylfa",
"mfhcuisgrnjzxckbgdtqeoylfa",
"mphiubsvrnjzxwkbgdtqeoyufa",
"dphctisvrnjzxwkbgdtqeoylfk",
"mphcuisvrnjznwksgdtqeoyzfa",
"mpwcuisvrnjziwkbgdtqaoylfa",
"mphduzsvrnjznwkbgdtqeoylfa",
"mphccisvrnjzxwebgdtqeoylqa",
"xphcuisvrnjzxwkfvdtqeoylfa",
"mphcupsvrnjzxwkbgdtfeoylpa",
"mphcuisvrtjzjwkbgdtqeoylfe",
"mpbcuisvrnjzxwkbgdmieoylfa",
"mphcuisvrnjzxwkbgjtqetylaa",
"mphcuisvrnjzxwpbgdtgdoylfa",
"ophcufsvrqjzxwkbgdtqeoylfa",
"iphcuhsvrnjzxwkbgetqeoylfa",
"mphcuisvunjzxwwbgdtqeoylqa",
"mphcpisvrnjzowkbgdtveoylfa",
"mphcuisvrnjzxhkbgdtqeotlla",
"mphcuisvrnjzxwkbodtgeoylha",
"mphcuisvrjjzxwkbwdtqtoylfa",
"mphcwisvrnjnxwkbgjtqeoylfa",
"mplcuicqrnjzxwkbgdtqeoylfa",
"mphcuisvrnjzxydbgdtqeoylfn",
"ophckisvrnjzxwkbgdtqeozlfa",
"mphcuisvrkjzxwkbgdtteoblfa",
"yphcuisvrnjcxwkbggtqeoylfa",
"mphcuisvrnazxwfbqdtqeoylfa",
"mphcuisvrmjzxwkbgdtlwoylfa",
"mphctksvrnjzxwibgdtqeoylfa",
"mphcuisprnjzxlebgdtqeoylfa",
"mphcuisnrnjzxakbgdtueoylfa",
"mphcuiavrnjoxwtbgdtqeoylfa",
"nphcuisvrnjzxwkbgdtqzoylfk",
"mphcuisrrnjmxwkbgdtqdoylfa",
"mphcuisvrujzxwkvgdtqehylfa",
"mphcuisvrnfzxwkogdtqebylfa",
"mphcuisvrnjwdwkbgdtqeoyxfa",
"mphcuisvrntzxwkrgxtqeoylfa",
"mpzcuisvrnjzxwebgdtqeoylsa",
"aphcuikvrnjzxwwbgdtqeoylfa",
"mphcqisvrnjzxwkpgdtqeoelfa",
"mphcuusvrnjzxwkbgdtjeodlfa",
"mphcuisvrnjzewkbgdtteoylza",
"mphcuisvanjzxwkbgdtheoylfc",
"mphcjishrnjzxwkbgltqeoylfa",
"mpxcuislrnjzxwkbgdtqeoynfa",
"mphcuisvrnjjxwkbgdtmeoxlfa",
"mphcimsvrnjzxwkbsdtqeoylfa",
"mphcxisvcnjzxwjbgdtqeoylfa",
"mphcuisbrvjzxwkbgdtqeoymfa",
"mplcuisvrnjzxwkbgdtaenylfa",
"mphcuihvrnjzxwkygytqeoylfa",
"mphcbisvrnjzxhkbgdtqezylfa",
"mphcuisarnjzxwkbgatqeoylfv",
"mphcumsvrnjzxwkbgdrqebylfa",
"mlhcuisvrnwzxwkbgdtqeoylfx",
"mpkcuisvrkjzxwkbgdtqeoylfo",
"mphcuissrnjzxwkbgdtqmoylfc",
"mphcuiwvrnjuxwkfgdtqeoylfa",
"mphcuicvlnjzxwkbgdvqeoylfa",
"mphcuisvrvvzxwkbfdtqeoylfa",
"myhcuisvrnjpxwkbgntqeoylfa",
"mpocuisvrnjzxwtbgitqeoylfa",
"mphcuisvrnjzxwkbgdtwewyqfa",
"mphcuisvtnjzxwwbgdtqeoolfa",
"mphcuisvrnjzxgkbgdyqeoyyfa",
"mphcuisvrdjzxwkbgpyqeoylfa",
"bphcuisvrnjzxwkbgxtqefylfa",
"sphcuisvrdjzxwktgdtqeoylfa",
"mphcuvsvrnjmxwobgdtqeoylfa",
"mphcuisvrnjzxwkbsdtqeuylfb",
"mnhcmisvynjzxwkbgdtqeoylfa",
"mphckisvrnjzxwkhgdkqeoylfa",
"mpacuisvrnjzxwkbgdtqeoolaa",
"mpgcuisvrnjzxwkbzdtqeoynfa",
"mphcuisvrojzxwkbzdtqeoylga",
"mphcuisvknjfxwkbydtqeoylfa",
"mphcuistrnjzxwkbgdqqeuylfa",
"bpvcuiszrnjzxwkbgdtqeoylfa",
"mphcuxsvrnjzswkbgdtqeoelfa",
"mphcuisvbnjzxwlbgdtqeoylla",
"mphcuisvonczxwkbgktqeoylfa",
"mphcuisvrnkzxwvbgdtquoylfa",
"mphcuisvrnjzxokfgdtqeoylia",
"tphcuisvrnjzxwkbjdwqeoylfa",
"mihcuisvrnjzpwibgdtqeoylfa",
"mphcuisvrejzxwkbgdtqjuylfa",
"mprcuisvrnjixwkxgdtqeoylfa",
"mpqcuiszrnjzxwkbgdtqeodlfa",
"mphcuasvrnjzzakbgdtqeoylva",
"mphcuisvrnjzmwkbtdtqeoycfa",
"mphcuisvrnjzxwkbcdtqioylxa",
"mphckisvrnjzxwkbcdtqeoylfm",
"mphcuisvrnjuxwbogdtqeoylfa",
"mphcuisdrnjzxwkbldtqeoylfx",
"mphcuisvrnjoxwkbgdtqeyyyfa",
"mphcuicvqnjzxwkbgdtqeoylna",
"mpmcuisvrnjzxwkbgdtqktylfa",
"mphcuisvrnqzxwkggdtqeoykfa",
"mphcuisvryjzxwkbydtqejylfa",
"mphcugsvrnjzxwkbghtqeeylfa",
"rphcuusvrnjzxwkwgdtqeoylfa",
"zphwuiyvrnjzxwkbgdtqeoylfa",
"cphcuivvrnjzxwkbgdtqenylfa",
"mphcuisvrnjzxwkagotqevylfa",
"mprcuisvrcjzxwkbgdtqeoytfa",
"mphjugsvrnezxwkbgdtqeoylfa",
"mphcuisvryjzxwkbgltqeoylaa",
"mphcursvrnjzxfkbgdtqeoydfa",
"mphcuisvrcuzxwkbgdtqeoylfw",
"mphcuisvrijzxwkbgdtqeoelfh",
"xphcuisvenjzxjkbgdtqeoylfa",
"mphcuisvrnazxwkbgdeqeoylaa",
"mphcuisbrsjzxwkbgdtqeoygfa",
"mlhvuisvrnjzxwkbgdtqeoylfh",
"mphcuisvrnjzxukbgdtqeoyhfy",
"mpzcuilvrnjzawkbgdtqeoylfa",
"hphcuisjfnjzxwkbgdtqeoylfa",
"mahcuisvrnjzxwkegdtqeoylfi",
"mphcuixvrnjzcwkbgdtqetylfa",
"mphcuisvrnjzxwkdgdtqeoklfj",
"mlhcuisvrnjzxwkbgdteeoylka",
"mphcuifvrnjbxwkrgdtqeoylfa",
"mphcuasvrnjzzwkbgdtqeoylva",
"mphcuisvrnjzxwkboutqeoylba",
"mbhcuisvcnjzxwklgdtqeoylfa",
"mpbcuisvrnjzxgkbgdtqesylfa",
"mphcuisvrnjfswkbgdtqeoylfd",
"mphcuisvrnjzxwkbgdoweoysfa",
"uphcuisvrnjzrwkbgdtqelylfa",
"mphcuisvrnjzxwkbgdtqyoylsi",
"mpqcuiqvxnjzxwkbgdtqeoylfa",
"mphcuisorfjzxwkbgatqeoylfa",
"mphcuisvrntfxwkbzdtqeoylfa",
"mphcuisvrnrzxwkbgdtueoylfl",
"mphcuisvrnjzewkagdtyeoylfa",
"mpocuisdrnjzxwkbgdtqeozlfa",
"mphcuisvrnjjxwkbgdtoeoylfm",
"mphcuisvenjzxwkbgdtqwoylza",
"mpmcuisvrnjzxwkbgdtqeoxlfr",
"mphcuisvgnjhxwkbgdtqeoplfa",
"mphcuisvrnjzowkdgdtqeoyyfa",
"mphcuisqynjzxwkbgdtqeoylda",
"hphcuisvgnjzxwkbgdtbeoylfa",
"iphcuipvrnuzxwkbgdtqeoylfa",
"mphcuisvrnjzsikbpdtqeoylfa",
"mpwcuhsvrnjzxbkbgdtqeoylfa",
"mnhjuisvcnjzxwkbgdtqeoylfa",
"mphcudsvrnjzxwkbgdtqloilfa",
"mpncuiwvrwjzxwkbgdtqeoylfa",
"mphcuisvrnjgawkbgdtqeoylya",
"mphcuisvrnjzxwkbggtteoslfa",
"mphcuisvrnjzxwkbgdvqeoylpe",
"mphcuisvrnczxfkbgktqeoylfa",
"mphcuifvrnjzxwkbgdbmeoylfa",
"mphcuisvrnjytwkbgdtqeoylla",
"mphcuisvrnjzxwkbgdtjeoxlfn",
"mphjuisvrnjzxwkbghtqeoyffa",
"mphcuisvrnjzxkrbgdtqeoylaa",
"mphcbisvrnjzxwkbgttqeoylfs",
"mphkuksvbnjzxwkbgdtqeoylfa",
"nphcuidvrnjzxwhbgdtqeoylfa",
"mphguzsvrnjzxwkbgdaqeoylfa",
"mihcuisfrnjzxwkbgdtqhoylfa",
"mphcuisvrnrzxwpbgdtqesylfa",
"zphcuisvrnjzxwkbddtqeoylaa",
"mphcuigvmnjzxwkbgdtqeoylba",
"mjhcuisvrnjzxjkbgdtqeoylha",
"mphnuisvrnjznwkbgdtqnoylfa",
"mkhcuisvrnjcxwkbgdqqeoylfa",
"mphcuisvenjzxwbbqdtqeoylfa",
"qphcuisnrnjzawkbgdtqeoylfa",
"mphcuisvrdjzxwkbgdtqeoywca",
"mphcuzsvvnjzxwfbgdtqeoylfa",
"pphcuxsvrnjzxwkbgdtmeoylfa",
"mphiuvsvrnjzxlkbgdtqeoylfa",
"mphlqisvrnjzxkkbgdtqeoylfa",
"mmhcuisvrnjzxwkbgatqeoylea",
"mphduisrrnjoxwkbgdtqeoylfa",
"mphcuisvrnjnxwkvgdyqeoylfa",
"mphcuvsvrnjzxgkbgdtqeoylfz",
"mphcuisvryjzxwkbggtqkoylfa",
"iphcuisvrdjzxwkbgotqeoylfa",
"mphcuisvrnjzxwhbgdtqwoyofa",
"mphcorbvrnjzxwkbgdtqeoylfa",
"mghcuisvrnpzxykbgdtqeoylfa",
"mphauisvrnjnxwkbzdtqeoylfa",
"mphcgisvrnjzxwkwgdtqeoygfa",
"mphcuisvrnjzxwkggotqeoylba",
"mphcuesvrnjzxwkbgdwqebylfa",
"yphcuisvrnjzxwkbgdxqeoylja",
"ephyuisvrnjzywkbgdtqeoylfa",
"mfhcuisqrnjzxwkbgdlqeoylfa",
"mphkuisvrnjzxwkbertqeoylfa",
"mphcuusgrnjzxwkbggtqeoylfa",
"mphcuildrnjvxwkbgdtqeoylfa",
"mphcuiuvrnjzlwkbgwtqeoylfa",
"mppcuisvrljzxwkbgdtqeoylfw",
"mphcwiwvrnjzxwsbgdtqeoylfa",
"mphcubivrnjzxwkqgdtqeoylfa",
"mphcuisvrnjpxwkngdtqeoylpa",
"pchcuisvrgjzxwkbgdtqeoylfa",
"mphcuisvlnjzxwkbgdtmeoylfw",
"mphcuisvrnjzywkbgdvqeoylfj",
"mpzcuisvrnezxwktgdtqeoylfa",
"mphcuisvrnjbxwkbgzrqeoylfa",
"mphcuisvrnjzxwktgdtqeodtfa",
"jphcuiavrnjzxwkbgdtqeoylfv",
"mphcuisvrnjzxwkbddppeoylfa",
"mphcuissrkjzxwkbgxtqeoylfa",
"mphcuisvrhjzxwxbgdtqeoylxa",
"mphcvisvgnjjxwkbgdtqeoylfa",
"mphcuisprnjwxwtbgdtqeoylfa",
"mphcuissrnjzxqkbgdtqeoymfa",
"mphcuiabrnjzxokbgdtqeoylfa",
"mphcuisvrnczxwkbgmtpeoylfa",
]


def first_part():
    res = 0
    occ2 = 0
    occ3 = 0
    for lign in var:
        dic = {}
        for letter in lign:
            if letter in dic:
                dic[letter] += 1
            else:
                dic[letter] = 1
        occ2here = 0
        occ3here = 0
        for each, key in enumerate(dic):
            print(dic[key])
            occ2here = 1 if dic[key] == 2 else occ2here 
            occ3here = 1 if dic[key] == 3 else occ3here
        occ2 += occ2here
        occ3 += occ3here        
    print(occ2 * occ3)


def compare_both(line1, line2):
    print(line1, line2)
    diff = None
    key = 0
    while key < len(line1):
        if (line1[key] != line2[key]):
            if (diff is None):
                diff = True
            else:
                return False
        key += 1
    return([line1, line2])

def part_two():
    res= None
    i = 0
    while i < len(var):
        j = i + 1
        while j < len(var):
            if compare_both(var[i], var[j]):
                res = compare_both(var[i], var[j])
                i = len(var)
                j = len(var)
            j += 1
        if (res != False):
            i += 1
    print(res)

part_two()